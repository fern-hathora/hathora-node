/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { HathoraApi } from "@fern-api/hathora";
import * as core from "../../../../core";

export const Deployment: core.serialization.ObjectSchema<serializers.Deployment.Raw, HathoraApi.Deployment> =
    core.serialization.object({
        appId: core.serialization.lazy(async () => (await import("../../..")).AppId),
        deploymentId: core.serialization.lazy(async () => (await import("../../..")).DeploymentId),
        regionalContainerTags: core.serialization.list(
            core.serialization.lazyObject(async () => (await import("../../..")).RegionalContainerTags)
        ),
        containerPort: core.serialization.number(),
        transportType: core.serialization.lazy(async () => (await import("../../..")).TransportType),
        roomsPerProcess: core.serialization.number(),
        requestedCpu: core.serialization.property("requestedCPU", core.serialization.number()),
        requestedMemoryMb: core.serialization.property("requestedMemoryMB", core.serialization.number()),
        deployedBy: core.serialization.string(),
        deployStartedAt: core.serialization.date(),
        deployFinishedAt: core.serialization.date().optional(),
        status: core.serialization.lazy(async () => (await import("../../..")).DeploymentStatus),
    });

export declare namespace Deployment {
    interface Raw {
        appId: serializers.AppId.Raw;
        deploymentId: serializers.DeploymentId.Raw;
        regionalContainerTags: serializers.RegionalContainerTags.Raw[];
        containerPort: number;
        transportType: serializers.TransportType.Raw;
        roomsPerProcess: number;
        requestedCPU: number;
        requestedMemoryMB: number;
        deployedBy: string;
        deployStartedAt: string;
        deployFinishedAt?: string | null;
        status: serializers.DeploymentStatus.Raw;
    }
}
