/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../..";
import { HathoraApi } from "@fern-api/hathora";
import * as core from "../../../core";

export const Deployment: core.schemas.ObjectSchema<serializers.Deployment.Raw, HathoraApi.Deployment> =
  core.schemas.object({
    appId: core.schemas.lazy(async () => (await import("../..")).AppId),
    deploymentId: core.schemas.lazy(async () => (await import("../..")).DeploymentId),
    regionalContainerTags: core.schemas.list(
      core.schemas.lazyObject(async () => (await import("../..")).RegionalContainerTags)
    ),
    containerPort: core.schemas.number(),
    transportType: core.schemas.lazy(async () => (await import("../..")).TransportType),
    roomsPerProcess: core.schemas.number(),
    requestedCpu: core.schemas.property("requestedCPU", core.schemas.number()),
    requestedMemoryMb: core.schemas.property("requestedMemoryMB", core.schemas.number()),
    deployedBy: core.schemas.string(),
    deployStartedAt: core.schemas.date(),
    deployFinishedAt: core.schemas.date().optional(),
    status: core.schemas.lazy(async () => (await import("../..")).DeploymentStatus),
  });

export declare namespace Deployment {
  interface Raw {
    appId: serializers.AppId.Raw;
    deploymentId: serializers.DeploymentId.Raw;
    regionalContainerTags: serializers.RegionalContainerTags.Raw[];
    containerPort: number;
    transportType: serializers.TransportType.Raw;
    roomsPerProcess: number;
    requestedCPU: number;
    requestedMemoryMB: number;
    deployedBy: string;
    deployStartedAt: string;
    deployFinishedAt?: string | null;
    status: serializers.DeploymentStatus.Raw;
  }
}
